{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport class SocketService {\n  constructor(socket) {\n    this.socket = socket;\n  }\n  // emit event\n  fetchRooms() {\n    this.socket.emit(\"fetch-rooms\");\n  }\n  // listen event\n  onFetchRooms() {\n    return this.socket.fromEvent(\"update-rooms\");\n  }\n  //teste\n  teste() {\n    return this.socket.emit('teste');\n  }\n  joinRoom(room) {\n    this.socket.emit(\"create-and-join-room\", room, message => {\n      console.log(message);\n    });\n  }\n  leaveRoom(room) {\n    this.socket.emit(\"leave-room\", room);\n  }\n  sendMessage(message, room) {\n    this.socket.emit(\"send-message\", message, room);\n  }\n  onReceiveMessage() {\n    return this.socket.fromEvent(\"receive-message\");\n  }\n}\nSocketService.ɵfac = function SocketService_Factory(t) {\n  return new (t || SocketService)(i0.ɵɵinject(i1.Socket));\n};\nSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocketService,\n  factory: SocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtC;EACDC,UAAU;IACT,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,aAAa,CAAC;EAChC;EAEA;EACAC,YAAY;IACX,OAAO,IAAI,CAACH,MAAM,CAACI,SAAS,CAAW,cAAc,CAAC;EACvD;EAEC;EACAC,KAAK;IACH,OAAO,IAAI,CAACL,MAAM,CAACE,IAAI,CAAC,OAAO,CAAC;EAClC;EAEAI,QAAQ,CAACC,IAAa;IACpB,IAAI,CAACP,MAAM,CAACE,IAAI,CAAC,sBAAsB,EAAEK,IAAI,EAAGC,OAAY,IAAI;MAC9DC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAG,SAAS,CAACJ,IAAa;IACrB,IAAI,CAACP,MAAM,CAACE,IAAI,CAAC,YAAY,EAAEK,IAAI,CAAC;EACtC;EAEAK,WAAW,CAACJ,OAAgB,EAAED,IAAa;IACzC,IAAI,CAACP,MAAM,CAACE,IAAI,CAAC,cAAc,EAAEM,OAAO,EAAED,IAAI,CAAC;EACjD;EAEAM,gBAAgB;IAChB,OAAO,IAAI,CAACb,MAAM,CAACI,SAAS,CAAS,iBAAiB,CAAC;EACxD;;AAnCYN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgB,SAAbhB,aAAa;EAAAiB,YAFZ;AAAM","names":["SocketService","constructor","socket","fetchRooms","emit","onFetchRooms","fromEvent","teste","joinRoom","room","message","console","log","leaveRoom","sendMessage","onReceiveMessage","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';  \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  constructor(private socket: Socket) { }\n\n  // emit event\n\tfetchRooms() {\n\t\tthis.socket.emit(\"fetch-rooms\");\n\t} \n\n\t// listen event\n\tonFetchRooms() {\n\t\treturn this.socket.fromEvent<string[]>(\"update-rooms\");\n\t}\n\n  //teste\n  teste() {\n    return this.socket.emit('teste');\n  }\n\n  joinRoom(room : string) {\n    this.socket.emit(\"create-and-join-room\", room, (message: any) => {\n      console.log(message);\n    });\n  }\n\n  leaveRoom(room : string) {\n    this.socket.emit(\"leave-room\", room);\n  }\n\n  sendMessage(message : string, room : string) {\n    this.socket.emit(\"send-message\", message, room);\n  }\n\n  onReceiveMessage() {\n\t\treturn this.socket.fromEvent<string>(\"receive-message\");\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}