{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/socket.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction RoomsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"id\", \"room-\", room_r1.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r1.name);\n  }\n}\nexport class RoomsComponent {\n  constructor(socketService) {\n    this.socketService = socketService;\n    this.roomName = '';\n    this.rooms = [];\n  }\n  onCreateRoom(roomName) {\n    this.socketService.joinRoom(roomName);\n    this.createDiv(roomName);\n    this.roomName = '';\n  }\n  createDiv(roomName) {\n    var room = {\n      name: roomName\n    };\n    this.rooms.push(room);\n  }\n  ngOnInit() {\n    this.socketService.teste();\n    console.log(\"evento emitido\");\n  }\n}\nRoomsComponent.ɵfac = function RoomsComponent_Factory(t) {\n  return new (t || RoomsComponent)(i0.ɵɵdirectiveInject(i1.SocketService));\n};\nRoomsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RoomsComponent,\n  selectors: [[\"app-rooms\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"flex\", \"column\"], [1, \"title\"], [1, \"rooms-container\"], [\"routerLink\", \"/chat-component\", \"routerLinkActive\", \"active\", \"ariaCurrentWhenActive\", \"page\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"create-room\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"placeholder\", \"Room name...\", \"id\", \"room-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"id\", \"room-button\", 3, \"click\"], [3, \"id\"]],\n  template: function RoomsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Welcome to Sockets Io Chat Rooms\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"a\", 4);\n      i0.ɵɵtext(6, \"Chat Component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, RoomsComponent_div_7_Template, 2, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RoomsComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.roomName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function RoomsComponent_Template_button_click_10_listener() {\n        return ctx.onCreateRoom(ctx.roomName);\n      });\n      i0.ɵɵtext(11, \"Create Room\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rooms);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.roomName);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RouterLink, i4.RouterLinkActive],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAQQA,8BAAyD;IAAAA,YAAa;IAAAA,iBAAM;;;;IAA3CA,0DAAuB;IAACA,eAAa;IAAbA,kCAAa;;;ACC9E,OAAM,MAAOC,cAAc;EAKzBC,YACQC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IALrB,aAAQ,GAAY,EAAE;IAEtB,UAAK,GAAW,EAAE;EAIf;EAEHC,YAAY,CAACC,QAAiB;IAC5B,IAAI,CAACF,aAAa,CAACG,QAAQ,CAACD,QAAQ,CAAC;IACrC,IAAI,CAACE,SAAS,CAACF,QAAQ,CAAC;IACxB,IAAI,CAACA,QAAQ,GAAG,EAAE;EACpB;EAEAE,SAAS,CAACF,QAAiB;IACzB,IAAIG,IAAI,GAAU;MAChBC,IAAI,EAAEJ;KACP;IACD,IAAI,CAACK,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;EACvB;EAEDI,QAAQ;IACL,IAAI,CAACT,aAAa,CAACU,KAAK,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAChC;;AAzBYd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3BpB,8BAAuB;MAICA,gDAAgC;MAAAA,iBAAK;MAEvDA,8BAA6B;MAC4DA,8BAAc;MAAAA,iBAAI;MACzGA,+DAA4E;MAC9EA,iBAAM;MAENA,8BAA6B;MACsDA;QAAA;MAAA,EAAsB;MAAvGA,iBAAwG;MACxGA,kCAAwE;MAAhEA;QAAA,OAASqB,8BAAsB;MAAA,EAAC;MAAgCrB,4BAAW;MAAAA,iBAAS;;;MALrEA,eAAQ;MAARA,mCAAQ;MAIkDA,eAAsB;MAAtBA,sCAAsB","names":["i0","RoomsComponent","constructor","socketService","onCreateRoom","roomName","joinRoom","createDiv","room","name","rooms","push","ngOnInit","teste","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\components\\rooms\\rooms.component.html","C:\\Projetos\\socketsio\\angular-client\\src\\app\\components\\rooms\\rooms.component.ts"],"sourcesContent":["<div class=\"container\">\n\n    <div class=\"flex column\">\n      \n      <h1 class=\"title\">Welcome to Sockets Io Chat Rooms</h1>\n  \n      <div class=\"rooms-container\">\n        <a routerLink=\"/chat-component\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Chat Component</a>\n        <div  *ngFor=\"let room of rooms\" id=\"room-{{room.name}}\">{{room.name}}</div>\n      </div>\n      \n      <div class=\"row create-room\">\n        <input type=\"text\" autocomplete=\"off\" placeholder=\"Room name...\" id=\"room-input\" [(ngModel)]=\"roomName\">\n        <button (click)=\"onCreateRoom(roomName)\" type=\"button\" id=\"room-button\">Create Room</button>\n      </div>\n  \n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service'; \nimport { Room } from 'src/app/models/rooms';\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent {\n  roomName : string = '';\n\n  rooms: Room[] = [];\n\n  constructor(\n\t\tprivate socketService: SocketService \n\t) { }\n\n  onCreateRoom(roomName : string) {\n    this.socketService.joinRoom(roomName);\n    this.createDiv(roomName);\n    this.roomName = '';\n  }\n\n  createDiv(roomName : string): void {\n    var room : Room = {\n      name: roomName\n    }\n    this.rooms.push(room);\n  }\n\n\tngOnInit(): void { \n    this.socketService.teste();\n    console.log(\"evento emitido\");\n\t} \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}