{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/socket.service\";\nimport * as i2 from \"src/app/services/shared.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ChatComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", message_r1.sentBy, \": \", message_r1.text, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, message_r1.createdAt, \"short\"));\n  }\n}\nexport class ChatComponent {\n  constructor(socketService, sharedService, route, router) {\n    this.socketService = socketService;\n    this.sharedService = sharedService;\n    this.route = route;\n    this.router = router;\n    this.message = '';\n    this.messages = [];\n    this.roomName = '';\n    this.userName = '';\n  }\n  onSendMessage(message) {\n    if (message === \"\") return;\n    this.socketService.sendMessage(message, this.roomName, this.userName);\n    this.message = '';\n  }\n  leaveRoom() {\n    this.socketService.leaveRoom(this.roomName);\n  }\n  ngOnInit() {\n    let userName = this.sharedService.getUserName();\n    if (userName) {\n      this.userName = userName;\n    } else {\n      //this.router.navigate(['']);\n    }\n    this.roomName = this.route.snapshot.paramMap.get('name');\n    this.socketService.joinRoom(this.roomName);\n    this.socketService.onReceiveMessage().subscribe(data => {\n      this.messages.push(data);\n    });\n    this.socketService.fetchMessages(this.roomName);\n    this.socketService.onFetchMessages().subscribe(data => {\n      if (this.messages.length === 0) {\n        this.messages = data;\n      }\n    });\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.SocketService), i0.ɵɵdirectiveInject(i2.SharedService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"flex\", \"column\"], [1, \"title\"], [1, \"messages-container\"], [\"class\", \"messages\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"send-message\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"placeholder\", \"Message...\", \"id\", \"message-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"id\", \"message-button\", 3, \"click\"], [\"routerLink\", \"/rooms\", \"routerLinkActive\", \"active\", \"ariaCurrentWhenActive\", \"page\", 3, \"click\"], [1, \"messages\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ChatComponent_div_5_Template, 6, 6, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_8_listener() {\n        return ctx.onSendMessage(ctx.message);\n      });\n      i0.ɵɵtext(9, \"Send\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"a\", 8);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_a_click_10_listener() {\n        return ctx.leaveRoom();\n      });\n      i0.ɵɵtext(11, \"Return to Lobby\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Room \", ctx.roomName, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.message);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i3.RouterLink, i3.RouterLinkActive, i4.DatePipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    background-image: linear-gradient(to bottom right, aqua, rgba(0, 0, 255, 0.74));\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n}\\r\\n\\r\\n.flex[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.row[_ngcontent-%COMP%] {\\r\\n    flex-direction: row;\\r\\n}\\r\\n\\r\\n.column[_ngcontent-%COMP%] {\\r\\n    flex-direction: column;\\r\\n    justify-content: space-evenly;\\r\\n}\\r\\n\\r\\n.title[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    height: auto;\\r\\n    padding: 1rem;\\r\\n    background: rgba(255, 255, 255, 0.2);\\r\\n    color: white;\\r\\n    border-radius: 20px;\\r\\n    border: 1px solid white;\\r\\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.651);\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%] {\\r\\n    width: 90%;\\r\\n    height: 40%; \\r\\n    border: 1px solid white;\\r\\n    margin: 1rem;   \\r\\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.651);\\r\\n    background: rgba(255, 255, 255, 0.2);\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.send-message[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    gap: 30px;\\r\\n    width: 60%;\\r\\n    height: 15%;\\r\\n    border-radius: 20px;\\r\\n    background-color: rgba(255, 255, 255, 0.2);\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n#message-button[_ngcontent-%COMP%] {\\r\\n    background-color: transparent;\\r\\n    border: 1px solid white;\\r\\n    color: white;\\r\\n    border-radius: 20px;\\r\\n    width: 30%;\\r\\n    height: 50px;\\r\\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.651);\\r\\n}\\r\\n\\r\\n#message-input[_ngcontent-%COMP%] {\\r\\n    border: 1px solid white;\\r\\n    color: black;\\r\\n    border-radius: 20px;\\r\\n    width: 70%;\\r\\n    height: 50px;\\r\\n    padding: 20px;\\r\\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.651);\\r\\n}\\r\\n\\r\\n#message-input[_ngcontent-%COMP%]:focus {\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\r\\n    font-size: 1.2rem;\\r\\n    height: 2rem;   \\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(even) {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n}\\r\\n\\r\\n.messages-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(odd) {\\r\\n    background: rgba(255, 255, 255, 0.4);\\r\\n}\\r\\n\\r\\n.messages[_ngcontent-%COMP%] {   \\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;    \\r\\n}\\r\\n\\r\\np[_ngcontent-%COMP%] {\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    margin-left: 1rem;\\r\\n    margin-right: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jaGF0L2NoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLCtFQUErRTtJQUMvRSxXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGFBQWE7SUFDYixvQ0FBb0M7SUFDcEMsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsNkNBQTZDO0FBQ2pEOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLDZDQUE2QztJQUM3QyxvQ0FBb0M7SUFDcEMsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLDBDQUEwQztJQUMxQyxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixZQUFZO0lBQ1osNkNBQTZDO0FBQ2pEOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLFlBQVk7SUFDWixhQUFhO0lBQ2IsNkNBQTZDO0FBQ2pEOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSByaWdodCwgYXF1YSwgcmdiYSgwLCAwLCAyNTUsIDAuNzQpKTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxufVxyXG5cclxuLmZsZXgge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5yb3cge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG5cclxuLmNvbHVtbiB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xyXG4gICAgYm94LXNoYWRvdzogM3B4IDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC42NTEpO1xyXG59XHJcblxyXG4ubWVzc2FnZXMtY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBoZWlnaHQ6IDQwJTsgXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIG1hcmdpbjogMXJlbTsgICBcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNjUxKTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbi5zZW5kLW1lc3NhZ2Uge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMzBweDtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgICBoZWlnaHQ6IDE1JTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4jbWVzc2FnZS1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgYm94LXNoYWRvdzogM3B4IDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC42NTEpO1xyXG59XHJcblxyXG4jbWVzc2FnZS1pbnB1dCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNjUxKTtcclxufVxyXG5cclxuI21lc3NhZ2UtaW5wdXQ6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLm1lc3NhZ2VzLWNvbnRhaW5lciBkaXYge1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICBoZWlnaHQ6IDJyZW07ICAgXHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5tZXNzYWdlcy1jb250YWluZXIgZGl2Om50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XHJcbn1cclxuXHJcbi5tZXNzYWdlcy1jb250YWluZXIgZGl2Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcclxufVxyXG5cclxuLm1lc3NhZ2VzIHsgICBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47ICAgIFxyXG59XHJcblxyXG5wIHtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAOYA,8BAAuD;IAChDA,YAAoC;IAAAA,iBAAI;IAC3CA,yBAAG;IAAAA,YAAsC;;IAAAA,iBAAI;;;;IAD1CA,eAAoC;IAApCA,uEAAoC;IACpCA,eAAsC;IAAtCA,yEAAsC;;;ACEzD,OAAM,MAAOC,aAAa;EAOxBC,YACQC,aAA4B,EAC1BC,aAA4B,EAC5BC,KAAqB,EACrBC,MAAc;IAHhB,kBAAa,GAAbH,aAAa;IACX,kBAAa,GAAbC,aAAa;IACb,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAThB,YAAO,GAAY,EAAE;IACrB,aAAQ,GAAe,EAAE;IACzB,aAAQ,GAAY,EAAE;IACtB,aAAQ,GAAY,EAAE;EAOnB;EAEHC,aAAa,CAACC,OAAgB;IAC5B,IAAIA,OAAO,KAAK,EAAE,EAAE;IACpB,IAAI,CAACL,aAAa,CAACM,WAAW,CAACD,OAAO,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IACrE,IAAI,CAACH,OAAO,GAAG,EAAE;EACnB;EAEAI,SAAS;IACP,IAAI,CAACT,aAAa,CAACS,SAAS,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC7C;EAEAG,QAAQ;IAEN,IAAIF,QAAQ,GAAG,IAAI,CAACP,aAAa,CAACU,WAAW,EAAE;IAC/C,IAAGH,QAAQ,EAAE;MACX,IAAI,CAACA,QAAQ,GAAGA,QAAQ;KACzB,MAAM;MACL;IAAA;IAGF,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACU,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,MAAM,CAAE;IACzD,IAAI,CAACd,aAAa,CAACe,QAAQ,CAAC,IAAI,CAACR,QAAQ,CAAC;IAE1C,IAAI,CAACP,aAAa,CAACgB,gBAAgB,EAAE,CAACC,SAAS,CAAGC,IAAa,IAAI;MACjE,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;IACxB,CAAC,CACF;IAED,IAAI,CAAClB,aAAa,CAACqB,aAAa,CAAC,IAAI,CAACd,QAAQ,CAAC;IAC/C,IAAI,CAACP,aAAa,CAACsB,eAAe,EAAE,CAACL,SAAS,CAAGC,IAAe,IAAI;MAClE,IAAG,IAAI,CAACC,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACJ,QAAQ,GAAGD,IAAI;;IAExB,CAAC,CAAC;EACJ;;AA/CWpB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX1B/B,8BAAuB;MAIGA,YAAiB;MAAAA,iBAAK;MAExCA,8BAAgC;MAC5BA,8DAGM;MACVA,iBAAM;MAENA,8BAA8B;MACwDA;QAAA;MAAA,EAAqB;MAAvGA,iBAAwG;MACxGA,iCAA2E;MAAnEA;QAAA,OAASgC,8BAAsB;MAAA,EAAC;MAAmChC,oBAAI;MAAAA,iBAAS;MAG5FA,6BAAoG;MAA7EA;QAAA,OAASgC,eAAW;MAAA,EAAC;MAAwDhC,gCAAe;MAAAA,iBAAI;;;MAdrGA,eAAiB;MAAjBA,gDAAiB;MAGWA,eAAW;MAAXA,sCAAW;MAO6BA,eAAqB;MAArBA,qCAAqB","names":["i0","ChatComponent","constructor","socketService","sharedService","route","router","onSendMessage","message","sendMessage","roomName","userName","leaveRoom","ngOnInit","getUserName","snapshot","paramMap","get","joinRoom","onReceiveMessage","subscribe","data","messages","push","fetchMessages","onFetchMessages","length","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\components\\chat\\chat.component.html","C:\\Projetos\\socketsio\\angular-client\\src\\app\\components\\chat\\chat.component.ts"],"sourcesContent":["<div class=\"container\">\n\n    <div class=\"flex column\">\n\n        <h1 class=\"title\">Room {{roomName}}</h1>\n\n        <div class=\"messages-container\">            \n            <div class=\"messages\" *ngFor=\"let message of messages\">\n                <p>{{message.sentBy}}: {{message.text}}</p>\n                <p>{{message.createdAt | date: 'short' }}</p>\n            </div>\n        </div>\n\n        <div class=\"row send-message\">\n            <input type=\"text\" autocomplete=\"off\" placeholder=\"Message...\" id=\"message-input\" [(ngModel)]=\"message\">\n            <button (click)=\"onSendMessage(message)\" type=\"button\" id=\"message-button\">Send</button>\n        </div>\n\n        <a routerLink=\"/rooms\" (click)=\"leaveRoom()\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Return to Lobby</a>\n\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service'; \nimport { SharedService } from 'src/app/services/shared.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Message } from 'src/app/models/rooms';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  message : string = '';\n  messages : Message[] = [];\n  roomName : string = '';\n  userName : string = '';\n\n  constructor(\n\t\tprivate socketService: SocketService,\n    private sharedService: SharedService,\n    private route: ActivatedRoute,\n    private router: Router,\n\t) { }\n\n  onSendMessage(message : string) {\n    if (message === \"\") return;  \n    this.socketService.sendMessage(message, this.roomName, this.userName);\n    this.message = '';\n  }\n\n  leaveRoom() {\n    this.socketService.leaveRoom(this.roomName);\n  }\n\n  ngOnInit() {\n\n    let userName = this.sharedService.getUserName();\n    if(userName) {\n      this.userName = userName; \n    } else {\n      //this.router.navigate(['']);\n    }\n\n    this.roomName = this.route.snapshot.paramMap.get('name')!;\n    this.socketService.joinRoom(this.roomName);\n\n    this.socketService.onReceiveMessage().subscribe( (data: Message) => {\n      this.messages.push(data);\n      }\n    );\n    \n    this.socketService.fetchMessages(this.roomName);\n    this.socketService.onFetchMessages().subscribe( (data: Message[]) => {\n      if(this.messages.length === 0) {\n        this.messages = data;\n      }\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}