{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SharedService {\n  constructor() {\n    this.subject = new Subject();\n  }\n  sendMessage(message) {\n    this.subject.next({\n      text: message\n    });\n  }\n  onMessage() {\n    return this.subject.asObservable();\n  }\n}\nSharedService.ɵfac = function SharedService_Factory(t) {\n  return new (t || SharedService)();\n};\nSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedService,\n  factory: SharedService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;;AAK1C,OAAM,MAAOC,aAAa;EAExBC;IAEQ,YAAO,GAAG,IAAIF,OAAO,EAAO;EAFpB;EAIhBG,WAAW,CAACC,OAAe;IACzB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;MAAEC,IAAI,EAAEH;IAAO,CAAE,CAAC;EACtC;EAEAI,SAAS;IACL,OAAO,IAAI,CAACH,OAAO,CAACI,YAAY,EAAE;EACtC;;AAZWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;EAAAU,YAFZ;AAAM","names":["Subject","SharedService","constructor","sendMessage","message","subject","next","text","onMessage","asObservable","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\services\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n\n  private subject = new Subject<any>();\n\n  sendMessage(message: string) {\n    this.subject.next({ text: message });\n  }\n\n  onMessage(): Observable<any> {\n      return this.subject.asObservable();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}