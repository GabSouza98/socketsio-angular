{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport class SocketService {\n  constructor(socket) {\n    this.socket = socket;\n    this.roomNames = this.socket.fromEvent(\"update-rooms\");\n  }\n  // emit event\n  fetchRooms() {\n    this.socket.emit(\"fetch-rooms\");\n  }\n  // listen event\n  onFetchMovies() {\n    return this.socket.fromEvent('fetchMovies');\n  }\n  //teste\n  teste() {\n    return this.socket.emit('teste');\n  }\n  joinRoom(room) {\n    this.socket.emit(\"create-and-join-room\", room, message => {\n      console.log(message);\n    });\n  }\n  sendMessage(message, room) {\n    this.socket.emit(\"send-message\", message, room);\n    console.log(message);\n  }\n  onUpdateRooms() {\n    return this.socket.fromEvent(\"update-rooms\");\n  }\n}\nSocketService.ɵfac = function SocketService_Factory(t) {\n  return new (t || SocketService)(i0.ɵɵinject(i1.Socket));\n};\nSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocketService,\n  factory: SocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAF1B,cAAS,GAAG,IAAI,CAACA,MAAM,CAACC,SAAS,CAAW,cAAc,CAAC;EAErB;EAEtC;EACDC,UAAU;IACT,IAAI,CAACF,MAAM,CAACG,IAAI,CAAC,aAAa,CAAC;EAChC;EAEA;EACAC,aAAa;IACZ,OAAO,IAAI,CAACJ,MAAM,CAACC,SAAS,CAAC,aAAa,CAAC;EAC5C;EAEC;EACAI,KAAK;IACH,OAAO,IAAI,CAACL,MAAM,CAACG,IAAI,CAAC,OAAO,CAAC;EAClC;EAEAG,QAAQ,CAACC,IAAa;IACpB,IAAI,CAACP,MAAM,CAACG,IAAI,CAAC,sBAAsB,EAAEI,IAAI,EAAGC,OAAY,IAAI;MAC9DC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAG,WAAW,CAACH,OAAgB,EAAED,IAAa;IACzC,IAAI,CAACP,MAAM,CAACG,IAAI,CAAC,cAAc,EAAEK,OAAO,EAAED,IAAI,CAAC;IAC/CE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB;EAEAI,aAAa;IACX,OAAO,IAAI,CAACZ,MAAM,CAACC,SAAS,CAAC,cAAc,CAAC;EAC9C;;AAlCWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["SocketService","constructor","socket","fromEvent","fetchRooms","emit","onFetchMovies","teste","joinRoom","room","message","console","log","sendMessage","onUpdateRooms","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';  \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  roomNames = this.socket.fromEvent<string[]>(\"update-rooms\");\n\n  constructor(private socket: Socket) { }\n\n  // emit event\n\tfetchRooms() {\n\t\tthis.socket.emit(\"fetch-rooms\");\n\t} \n\n\t// listen event\n\tonFetchMovies() {\n\t\treturn this.socket.fromEvent('fetchMovies');\n\t}\n\n  //teste\n  teste() {\n    return this.socket.emit('teste');\n  }\n\n  joinRoom(room : string) {\n    this.socket.emit(\"create-and-join-room\", room, (message: any) => {\n      console.log(message);\n    });\n  }\n\n  sendMessage(message : string, room : string) {\n    this.socket.emit(\"send-message\", message, room);\n    console.log(message);\n  }\n\n  onUpdateRooms() {\n    return this.socket.fromEvent(\"update-rooms\");\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}