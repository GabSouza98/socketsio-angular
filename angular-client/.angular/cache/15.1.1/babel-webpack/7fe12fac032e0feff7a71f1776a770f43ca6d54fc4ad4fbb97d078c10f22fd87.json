{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport class SocketService {\n  constructor(socket) {\n    this.socket = socket;\n  }\n  // emit event\n  fetchRooms() {\n    this.socket.emit(\"fetch-rooms\");\n  }\n  // listen event\n  onFetchRooms() {\n    return this.socket.fromEvent(\"update-rooms\");\n  }\n  joinRoom(room) {\n    this.socket.emit(\"join-room\", room);\n  }\n  leaveRoom(room) {\n    this.socket.emit(\"leave-room\", room);\n  }\n  sendMessage(message, room, user) {\n    this.socket.emit(\"send-message\", message, room, user);\n  }\n  onReceiveMessage() {\n    return this.socket.fromEvent(\"receive-message\");\n  }\n  createRoom(room) {\n    this.socket.emit(\"create-room\", room);\n  }\n  createUser(user) {\n    this.socket.emit(\"create-user\", user);\n  }\n  deleteRoom(room) {\n    this.socket.emit(\"delete-room\", room);\n  }\n}\nSocketService.ɵfac = function SocketService_Factory(t) {\n  return new (t || SocketService)(i0.ɵɵinject(i1.Socket));\n};\nSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocketService,\n  factory: SocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtC;EACDC,UAAU;IACT,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,aAAa,CAAC;EAChC;EAEA;EACAC,YAAY;IACX,OAAO,IAAI,CAACH,MAAM,CAACI,SAAS,CAAS,cAAc,CAAC;EACrD;EAECC,QAAQ,CAACC,IAAa;IACpB,IAAI,CAACN,MAAM,CAACE,IAAI,CAAC,WAAW,EAAEI,IAAI,CAAC;EACrC;EAEAC,SAAS,CAACD,IAAa;IACrB,IAAI,CAACN,MAAM,CAACE,IAAI,CAAC,YAAY,EAAEI,IAAI,CAAC;EACtC;EAEAE,WAAW,CAACC,OAAgB,EAAEH,IAAa,EAAEI,IAAa;IACxD,IAAI,CAACV,MAAM,CAACE,IAAI,CAAC,cAAc,EAAEO,OAAO,EAAEH,IAAI,EAAEI,IAAI,CAAC;EACvD;EAEAC,gBAAgB;IAChB,OAAO,IAAI,CAACX,MAAM,CAACI,SAAS,CAAS,iBAAiB,CAAC;EACxD;EAECQ,UAAU,CAACN,IAAa;IACtB,IAAI,CAACN,MAAM,CAACE,IAAI,CAAC,aAAa,EAAEI,IAAI,CAAC;EACvC;EAEAO,UAAU,CAACH,IAAa;IACtB,IAAI,CAACV,MAAM,CAACE,IAAI,CAAC,aAAa,EAAEQ,IAAI,CAAC;EACvC;EAEAI,UAAU,CAACR,IAAa;IACtB,IAAI,CAACN,MAAM,CAACE,IAAI,CAAC,aAAa,EAAEI,IAAI,CAAC;EACvC;;AAxCWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAiB,SAAbjB,aAAa;EAAAkB,YAFZ;AAAM","names":["SocketService","constructor","socket","fetchRooms","emit","onFetchRooms","fromEvent","joinRoom","room","leaveRoom","sendMessage","message","user","onReceiveMessage","createRoom","createUser","deleteRoom","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\socketsio\\angular-client\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';  \nimport { Room } from '../models/rooms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  constructor(private socket: Socket) { }\n\n  // emit event\n\tfetchRooms() {\n\t\tthis.socket.emit(\"fetch-rooms\");\n\t} \n\n\t// listen event\n\tonFetchRooms() {\n\t\treturn this.socket.fromEvent<Room[]>(\"update-rooms\");\n\t}\n\n  joinRoom(room : string) {\n    this.socket.emit(\"join-room\", room);\n  }\n\n  leaveRoom(room : string) {\n    this.socket.emit(\"leave-room\", room);\n  }\n\n  sendMessage(message : string, room : string, user : string) {\n    this.socket.emit(\"send-message\", message, room, user);\n  }\n\n  onReceiveMessage() {\n\t\treturn this.socket.fromEvent<string>(\"receive-message\");\n\t}\n\n  createRoom(room : string) {\n    this.socket.emit(\"create-room\", room);\n  }\n\n  createUser(user : string) {\n    this.socket.emit(\"create-user\", user);\n  }\n\n  deleteRoom(room : string) {\n    this.socket.emit(\"delete-room\", room);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}